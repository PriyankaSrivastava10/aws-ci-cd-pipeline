{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "(SO0025): CFN CI/CD pipeline central services",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Stack Creation Settings"
                    },
                    "Parameters": [
                        "StackCreationRoleArn"
                    ]
                }
            ],
            "ParameterLabels": {
                "StackCreationRoleArn": {
                    "default": "Create-Stack Role ARN"
                }
            }
        }
    },
    "Parameters": {
        "StackCreationRoleArn": {
            "Description": "Role used to launch CloudFormation stacks",
            "Type": "String"
        },
		"LambdaBucket": {
		    "Description": "S3 Bucket Name where Lambda Functions deploybles are uploaded",
			"Type": "String"
		},
		"SourceBucket": {
		    "Description": "Name of S3 Bucket to use as pipeline source",
			"Type": "String"
		},
		"SourceS3ObjectKey": {
            "Default": "manifest.zip",
            "Description": "Name of the zipped file to use as pipeline source",
            "Type": "String"
        }
    },
    "Mappings": {
        "Functions": {
            "Cleanup": {
                "S3Key": "stack_cleanup.zip",
                "Handler": "stack_cleanup"
            },
            "LintTemplate": {
                "S3Key": "lint_template.zip",
                "ToolVersion": "latest",
                "Handler": "lint_template"
            },
            "ValidateTemplate": {
                "S3Key": "validate_template.zip",
                "Handler": "validate_template"
            },
            "DeployToS3": {
                "S3Key": "deploy_to_s3.zip",
                "Handler": "deploy_to_s3"
            },
            "GenerateReport": {
                "S3Key": "generate_report.zip",
                "Handler": "generate_report"
            },
			"SubscribeToTopic": {
                "S3Key": "subscribe_to_topic.zip",
                "Handler": "subscribe_to_topic"
            },
			"s3Compliance": {
                "S3Key": "check_S3_Encryption.zip",
                "Handler": "s3encryptionCheck"
            }
        },
        "General": {
            "CodeRepo": {
                "S3BucketPrefix": [
				    {
                        "Ref": "LambdaBucket"
                    }
				],
                "S3KeyPrefix": "lambda_functions/"
            },
            "SendAnonymousData": {
                "Enabled": "No"
            },
            "AbsoluteBucketName": {
                "Enabled": "Yes"
            }
        }
    },
    "Conditions": {
        "EnableAnonReporting": {
            "Fn::Equals": [
                {
                    "Fn::FindInMap": [
                        "General",
                        "SendAnonymousData",
                        "Enabled"
                    ]
                },
                "Yes"
            ]
        },
        "UseRelativeBucket": {
            "Fn::Equals": [
                {
                    "Fn::FindInMap": [
                        "General",
                        "AbsoluteBucketName",
                        "Enabled"
                    ]
                },
                "No"
            ]
        }
    },
    "Resources": {
        "LintTemplateLambda": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Fn::Join": [
                            "",
                            [
                                {
                                   "Ref": "LambdaBucket"
                                },
                                {
                                "Fn::If": [
                                    "UseRelativeBucket",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            }
                            ]
                        ]
                    },
                    "S3Key": {
                        "Fn::Join": [
                            "",
                            [
                                {
                                    "Fn::FindInMap": [
                                        "General",
                                        "CodeRepo",
                                        "S3KeyPrefix"
                                    ]
                                },
                                {
                                    "Fn::FindInMap": [
                                        "Functions",
                                        "LintTemplate",
                                        "S3Key"
                                    ]
                                }
                            ]
                        ]
                    }
                },
                "Description": "Start a build using CodeBuild to lint templates with cfn-nag",
                "FunctionName": "Lint_Template",
                "Handler": {
                    "Fn::Join": [
                        ".",
                        [
                            {
                                "Fn::FindInMap": [
                                    "Functions",
                                    "LintTemplate",
                                    "Handler"
                                ]
                            },
                            "lambda_handler"
                        ]
                    ]
                },
                "MemorySize": "512",
                "Role": {
                    "Fn::GetAtt": [
                        "LintTemplateRole",
                        "Arn"
                    ]
                },
                "Runtime": "python2.7",
                "Timeout": "300",
                "Environment": {
                    "Variables": {
                        "SEND_ANONYMOUS_DATA": {
                            "Fn::FindInMap": [
                                "General",
                                "SendAnonymousData",
                                "Enabled"
                            ]
                        },
                        "TOOLVERSION": {
                            "Fn::FindInMap": [
                                "Functions",
                                "LintTemplate",
                                "ToolVersion"
                            ]
                        }
                    }
                }
            }
        },
        "LintTemplateRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "LintTemplateRole",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:logs:",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    ":",
                                                    {
                                                        "Ref": "AWS::AccountId"
                                                    },
                                                    ":log-group:/aws/lambda/*"
                                                ]
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "codepipeline:GetPipeline",
                                        "codepipeline:GetPipelineExecution",
                                        "codepipeline:GetPipelineState",
                                        "codepipeline:ListPipelines"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Sub": "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:*"
                                        }
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "codepipeline:GetJobDetails",
                                        "codepipeline:PutJobSuccessResult",
                                        "codepipeline:PutJobFailureResult"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:GetObject",
                                        "s3:PutObject"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "codebuild:startbuild",
                                        "codebuild:BatchGetBuilds"
                                    ],
                                    "Resource": {
                                        "Fn::Sub": "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/CFN-Lint-*"
                                    }
                                },
								{
                                    "Action": [
                                        "sns:Publish"
                                    ],
                                    "Resource": "*",
                                    "Effect": "Allow"
                                },
								{
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:DescribeLogStreams",
										"logs:FilterLogEvents",
										"logs:GetLogEvents"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "CreateStacksRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "CreateStacksRole",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:logs:",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    ":",
                                                    {
                                                        "Ref": "AWS::AccountId"
                                                    },
                                                    ":log-group:/aws/lambda/*"
                                                ]
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "codepipeline:GetPipeline",
                                        "codepipeline:GetPipelineExecution",
                                        "codepipeline:GetPipelineState",
                                        "codepipeline:ListPipelines"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Sub": "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:*"
                                        }
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "codepipeline:GetJobDetails",
                                        "codepipeline:PutJobSuccessResult",
                                        "codepipeline:PutJobFailureResult"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:GetObject",
                                        "s3:PutObject"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ec2:DescribeRegions",
                                        "ec2:CreateKeyPair",
                                        "ec2:DescribeAvailabilityZones"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "cloudformation:CreateStack",
                                        "cloudformation:DeleteStack",
                                        "cloudformation:DescribeStackEvents",
                                        "cloudformation:ListStackResources"
                                    ],
                                    "Resource": {
                                        "Fn::Sub": "arn:aws:cloudformation:*:${AWS::AccountId}:stack/ci-*"
                                    }
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "cloudformation:DescribeStacks",
                                        "cloudformation:ListStacks"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "iam:PassRole"
                                    ],
                                    "Resource": [
                                        {
                                            "Ref": "StackCreationRoleArn"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "ValidateTemplateLambda": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Fn::Join": [
                            "",
                            [
                                {
                                    "Ref": "LambdaBucket"
                                },
                                {
                                "Fn::If": [
                                    "UseRelativeBucket",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            }
                            ]
                        ]
                    },
                    "S3Key": {
                        "Fn::Join": [
                            "",
                            [
                                {
                                    "Fn::FindInMap": [
                                        "General",
                                        "CodeRepo",
                                        "S3KeyPrefix"
                                    ]
                                },
                                {
                                    "Fn::FindInMap": [
                                        "Functions",
                                        "ValidateTemplate",
                                        "S3Key"
                                    ]
                                }
                            ]
                        ]
                    }
                },
                "Description": "Build action to create stacks using templates, parameters and settings based on the defined ci config",
                "FunctionName": "Validate_Template",
                "Handler": {
                    "Fn::Join": [
                        ".",
                        [
                            {
                                "Fn::FindInMap": [
                                    "Functions",
                                    "ValidateTemplate",
                                    "Handler"
                                ]
                            },
                            "lambda_handler"
                        ]
                    ]
                },
                "MemorySize": "512",
                "Role": {
                    "Fn::GetAtt": [
                        "ValidateTemplateRole",
                        "Arn"
                    ]
                },
                "Runtime": "python2.7",
                "Timeout": "30",
                "Environment": {
                    "Variables": {
                        "SEND_ANONYMOUS_DATA": {
                            "Fn::FindInMap": [
                                "General",
                                "SendAnonymousData",
                                "Enabled"
                            ]
                        }
                    }
                }
            }
        },
        "ValidateTemplateRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "ValidateTemplateRole",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*"
                                        }
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "codepipeline:GetPipeline",
                                        "codepipeline:GetPipelineExecution",
                                        "codepipeline:GetPipelineState",
                                        "codepipeline:ListPipelines"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Sub": "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:*"
                                        }
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "codepipeline:GetJobDetails",
                                        "codepipeline:PutJobSuccessResult",
                                        "codepipeline:PutJobFailureResult"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:GetObject",
                                        "s3:PutObject"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "cloudformation:ValidateTemplate"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "GenerateReportLambda": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Fn::Join": [
                            "",
                            [
                                {
                                    "Ref": "LambdaBucket"
                                },
                                {
                                "Fn::If": [
                                    "UseRelativeBucket",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            }
                            ]
                        ]
                    },
                    "S3Key": {
                        "Fn::Join": [
                            "",
                            [
                                {
                                    "Fn::FindInMap": [
                                        "General",
                                        "CodeRepo",
                                        "S3KeyPrefix"
                                    ]
                                },
                                {
                                    "Fn::FindInMap": [
                                        "Functions",
                                        "GenerateReport",
                                        "S3Key"
                                    ]
                                }
                            ]
                        ]
                    }
                },
                "Description": "Generates a report on pipeline execution",
                "FunctionName": {
                    "Fn::Sub": "Generate_Report-${AWS::StackName}"
                },
                "Handler": {
                    "Fn::Join": [
                        ".",
                        [
                            {
                                "Fn::FindInMap": [
                                    "Functions",
                                    "GenerateReport",
                                    "Handler"
                                ]
                            },
                            "lambda_handler"
                        ]
                    ]
                },
                "MemorySize": "512",
                "Role": {
                    "Fn::GetAtt": [
                        "GenerateReportRole",
                        "Arn"
                    ]
                },
                "Runtime": "python2.7",
                "Timeout": "30",
                "Environment": {
                    "Variables": {
                        "SEND_ANONYMOUS_DATA": {
                            "Fn::FindInMap": [
                                "General",
                                "SendAnonymousData",
                                "Enabled"
                            ]
                        }
                    }
                }
            }
        },
        "GenerateReportRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "GenerateReportRole",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents",
                                        "logs:FilterLogEvents"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:logs:",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    ":",
                                                    {
                                                        "Ref": "AWS::AccountId"
                                                    },
                                                    ":log-group:/aws/lambda/*"
                                                ]
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "codepipeline:GetPipeline",
                                        "codepipeline:GetPipelineExecution",
                                        "codepipeline:GetPipelineState",
                                        "codepipeline:ListPipelines"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Sub": "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:*"
                                        }
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "codepipeline:GetJobDetails",
                                        "codepipeline:PutJobSuccessResult",
                                        "codepipeline:PutJobFailureResult"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:GetObject",
                                        "s3:PutObject"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Action": [
                                        "sns:Publish"
                                    ],
                                    "Resource": "*",
                                    "Effect": "Allow"
                                }
                            ]
                        }
                    }
                ]
            }
        },
		"SubscribeTopicLambda": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Fn::Join": [
                            "",
                            [
                                {
                                    "Ref": "LambdaBucket"
                                },
                                {
                                "Fn::If": [
                                    "UseRelativeBucket",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            }
                            ]
                        ]
                    },
                    "S3Key": {
                        "Fn::Join": [
                            "",
                            [
                                {
                                    "Fn::FindInMap": [
                                        "General",
                                        "CodeRepo",
                                        "S3KeyPrefix"
                                    ]
                                },
                                {
                                    "Fn::FindInMap": [
                                        "Functions",
                                        "SubscribeToTopic",
                                        "S3Key"
                                    ]
                                }
                            ]
                        ]
                    }
                },
                "Description": "Reads the email from config file and subscribes to the Topic",
                "FunctionName": {
                    "Fn::Sub": "Subscribe_Topic-${AWS::StackName}"
                },
                "Handler": {
                    "Fn::Join": [
                        ".",
                        [
                            {
                                "Fn::FindInMap": [
                                    "Functions",
                                    "SubscribeToTopic",
                                    "Handler"
                                ]
                            },
                            "lambda_handler"
                        ]
                    ]
                },
                "MemorySize": "512",
                "Role": {
                    "Fn::GetAtt": [
                        "SubscribeTopicRole",
                        "Arn"
                    ]
                },
                "Runtime": "python2.7",
                "Timeout": "30"
            }
        },
        "SubscribeTopicRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "SubscribeTopicRole",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents",
                                        "logs:FilterLogEvents"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:logs:",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    ":",
                                                    {
                                                        "Ref": "AWS::AccountId"
                                                    },
                                                    ":log-group:/aws/lambda/*"
                                                ]
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "codepipeline:GetPipeline",
                                        "codepipeline:GetPipelineExecution",
                                        "codepipeline:GetPipelineState",
                                        "codepipeline:ListPipelines"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Sub": "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:*"
                                        }
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "codepipeline:GetJobDetails",
                                        "codepipeline:PutJobSuccessResult",
                                        "codepipeline:PutJobFailureResult"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:GetObject",
                                        "s3:PutObject"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Action": "sns:*",
                                    "Resource": "*",
                                    "Effect": "Allow"
                                }
                            ]
                        }
                    }
                ]
            }
        },
		"CheckS3ComplianceLambda": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Fn::Join": [
                            "",
                            [
                                {
                                    "Ref": "LambdaBucket"
                                },
                                {
                                "Fn::If": [
                                    "UseRelativeBucket",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            }
                            ]
                        ]
                    },
                    "S3Key": {
                        "Fn::Join": [
                            "",
                            [
                                {
                                    "Fn::FindInMap": [
                                        "General",
                                        "CodeRepo",
                                        "S3KeyPrefix"
                                    ]
                                },
                                {
                                    "Fn::FindInMap": [
                                        "Functions",
                                        "s3Compliance",
                                        "S3Key"
                                    ]
                                }
                            ]
                        ]
                    }
                },
                "Description": "If the tag \"HIPPA:enabled\" is present, the bucket should be encrypted",
                "FunctionName": {
                    "Fn::Sub": "Check_s3_encryption-${AWS::StackName}"
                },
                "Handler": {
                    "Fn::Join": [
                        ".",
                        [
                            {
                                "Fn::FindInMap": [
                                    "Functions",
                                    "s3Compliance",
                                    "Handler"
                                ]
                            },
                            "lambda_handler"
                        ]
                    ]
                },
                "MemorySize": "512",
                "Role": {
                    "Fn::GetAtt": [
                        "CheckS3ComplianceRole",
                        "Arn"
                    ]
                },
                "Runtime": "python2.7",
                "Timeout": "30",
                "Environment": {
                    "Variables": {
                        "bucket": {
                            "Ref": "SourceBucket"
                        },
						"key": {
                            "Ref": "SourceS3ObjectKey"
                        }
                    }
                }
            }
        },
        "CheckS3ComplianceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "GenerateReportRole",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
									"Effect": "Allow",
									"Action": "logs:CreateLogGroup",
									"Resource": "arn:aws:logs:us-west-2:835377776149:*"
								},
								{
									"Effect": "Allow",
									"Action": [
										"logs:CreateLogStream",
										"logs:PutLogEvents"
									],
									"Resource": [
										"arn:aws:logs:us-west-2:835377776149:log-group:/aws/lambda/check_S3_Encryption-${AWS::StackName}:*"
									]
								},
								{
									"Sid": "VisualEditor0",
									"Effect": "Allow",
									"Action": [
										"sts:AssumeRole",
										"s3:*"
									],
									"Resource": "*"
								}
                            ]
                        }
                    }
                ]
            }
        }
		
	},
    "Outputs": {
        "GenerateReportLambdaName": {
            "Value": {
                "Ref": "GenerateReportLambda"
            },
            "Export": {
                "Name": "GenerateReportLambdaName"
            }
        },
        "LintTemplateLambdaName": {
            "Value": {
                "Ref": "LintTemplateLambda"
            },
            "Export": {
                "Name": "LintTemplateLambdaName"
            }
        },
        "ValidateTemplateLambdaName": {
            "Value": {
                "Ref": "ValidateTemplateLambda"
            },
            "Export": {
                "Name": "ValidateTemplateLambdaName"
            }
        },
		"SubscribeTopicLambdaName": {
            "Value": {
                "Ref": "SubscribeTopicLambda"
            },
            "Export": {
                "Name": "SubscribeTopicLambdaName"
            }
        }
    }
}
